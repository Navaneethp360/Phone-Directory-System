<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="MedicalSystem.SiteMaster" %>

<!DOCTYPE html>
<html lang="en">
<head runat="server">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title><%: Page.Title %> - Medical System</title>
<script>

    function showNotification({
        title = "Notification",
        message = "",
        meta = "",
        time = "now"
    }) {
        const container = document.getElementById('notification-container');
        if (!container) return;

        const card = document.createElement('div');
        card.className = 'notification-card notification-top';

        card.innerHTML = `
  <div class="notification-content">
    <div class="notification-avatar" aria-hidden="true">
      <svg width="20" height="20" fill="rgba(255,255,255,0.8)" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"></path>
      </svg>
    </div>
    <div class="notification-body">
      <div class="notification-header">
        <div class="notification-title">${title}</div>
        <div class="notification-time">${time}</div>
      </div>
      <div class="notification-message">${message}</div>
      <div class="notification-meta">${meta}</div>
    </div>
  </div>
`;

        container.appendChild(card);

        // Animate in
        requestAnimationFrame(() => {
            card.classList.add('show');
        });

        // Auto-hide
        setTimeout(() => {
            card.classList.remove('show');
            card.classList.add('hide');
            card.addEventListener('transitionend', () => card.remove());
        }, 6000);

        card.addEventListener('click', () => {
            card.classList.remove('show');
            card.classList.add('hide');
            card.addEventListener('transitionend', () => card.remove());
        });

    }
    document.addEventListener('DOMContentLoaded', () => {
        const selectors = [
            '.alert-message',
            '.alert-success',
            '.alert-error',

            '.page-header',
            '.page-header h2',

            '.container-row',
            '.form-container',
            '.form-container h3',
            '.form-container h4',

            '.form-group label',
            '.form-control',
            '.dropdown',
            '.btn-submit',
            '.message',

            '.checkbox-group',
            '.checkbox-group label',
            '.checkbox-group input',
            '.checkbox-group li',

            '.page-header',
            '.page-header h2',
            '.medical-icon:before',
            '.page-header .medical-icon:before',
            '.subtitle',

            '.search-container',
            '.search-form',
            '.search-container label',
            '.search-input-group',
            '.input-field',
            '.form-group',
            '.form-control',
            '.form-check',
            '.form-check-input',
            '.print-icon i',

            '.btn',
            '.btn-search',
            '.btn-primary',
            '.btn-danger',
            '.btn-secondary',
            '.btn-add',
            '.btn-action',
            '.btn-submit',
            '.btn-download',
            '.btn-link',

            '.message-box',
            '.message-success',
            '.message-error',

            '.report-container',
            '.report-header',
            '.report-header h3',
            '.report-timestamp',
            '.report-section',
            '.report-section p',
            '.visit-separator',
            '.dropdown-toggle',
            '.dropdown-content',
            '.visit-collapsible-section',
            '.visit-details',
            '.visit-number',
            '.visit-date',
            '.detail-row',
            '.detail-label',
            '.detail-value',
            '.file-item',

            '.action-buttons',
            '.action-icons',
            '.action-icon',
            '.edit-icon',
            '.delete-icon',
            '.action-icon.small',

            '.modal-dialog',
            '.modal-header',
            '.modal-title',
            '.modal-close',
            '.modal-body',
            '.modal-footer',
            '.condition-checkbox',
            '.modal-backdrop',

            '.content',
            '.glass',
            '.dashboard-container',
            '.welcome-banner',
            '.welcome-content',
            '.welcome-banner h1',
            '.welcome-subtitle',
            '.stats-container',
            '.stat-card',
            '.stat-icon',
            '.stat-content h3',
            '.stat-content p',
            '.stat-link',
            '.recent-activity',
            '.recent-activity h2',
            '.activity-container',
            '.activity-card',
            '.activity-card h3',
            '.action-list',
            '.action-list li',
            '.action-list a',
            '.info-text',

            '.styled-grid',
            '.styled-grid th',
            '.styled-grid td',
            '.grid-row:hover td',
            '.grid-alt-row td',
            'input[type="file"]',
            'label',
            'select',
            '.table',
            '.table th',
            '.table td',
            '.table tr:nth-child(even)',
            '.table tr:hover',
            '.page-content',
            '.form-group',
            '.form-control',
            '.btn',
            '.panel-glass',
            '.badge',
            '.badge-info',
            '.badge-success',
            '.badge-warning',
            '.page-header',
            '.page-header h2',
            '.medical-icon:before',
            '.subtitle',
            'label',
            'select',
            '.filter-section',
            '.entry-section',
            '.list-section',
            '.history-section',
            '.btn',
            '.btn:hover',
            '.btn:focus',
            '.btn:disabled',
            '.disabled-button',
            'input[type="text"]',
            '.aspNetDisabled',
            '.filter-section > *',
            '.fitness-report-page h3',
            '.styled-grid',
            '.styled-grid th',
            '.styled-grid td',
            '.grid-row:hover td',
            '.grid-alt-row td',
            '.info-box',
            '.message-box',
            '.btn-download',
            '.btn-download:hover',
            '.btn-delete',
            '.btn-delete:hover',
            '.badge-danger'
        ];

        // Batch animate
        const elements = document.querySelectorAll(selectors.join(', '));

        elements.forEach((el, i) => {
            el.style.opacity = '0';
            el.style.transform = 'translateY(20px)';
            el.style.transition = `opacity 0.1s ease ${(i * 0.01)}s, transform 0.1s ease ${(i * 0.01)}s`;

            requestAnimationFrame(() => {
                el.style.opacity = '1';
                el.style.transform = 'translateY(0)';
            });
        });
    });
</script>


    <style>
        html, body {
            height: 100%;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #2c65a6;
            color: white;
            overflow-x: hidden; /* prevent horizontal scroll from fixed elements */
        }

        header {
    position: fixed;
    top: 20px;
    left: 20px;
    right: 35px;
    height: 76px;
    background-color: rgba(69, 151, 213, 0.25);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 30px;
    font-size: 1.7rem;
    font-weight: bold;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    color: white;
    z-index: 1100;
}

        header a {
            display: flex;
            align-items: center;
            color: white;
            text-decoration: none;
            background: rgba(255,255,255,0.15);
            backdrop-filter: blur(8px);
            border: 1px solid rgba(255,255,255,0.25);
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            padding: 11px 12px;
            transition: background-color 0.3s ease;
        }
        header a:hover, header a:focus {
            background-color: rgba(255,255,255,0.3);
        }

        .logout-button {
            padding: 8px 16px;
            border-radius: 10px;
            font-weight: 500;
            background-color: rgba(255,255,255,0.15);
            color: white;
            border: 1px solid rgba(255,255,255,0.25);
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
            box-shadow: 0 2px 6px rgba(0,0,0,0.2);
            cursor: pointer;
            border: none;
        }
        .logout-button:hover {
            background-color: rgba(255,255,255,0.25);
            color: white;
        }
aside {
    position: fixed;
    top: 115px;    /* header height + padding */
    bottom: 60px; /* footer height + padding */
    left: 20px;
    width: 260px;
    
    background-color: rgba(69, 151, 213, 0.25);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    color: white;
    padding: 15px 10px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    
    display: flex;
    flex-direction: column;
    gap: 6px;
    z-index: 1050;

    overflow-y: auto; /* scroll inside if content is bigger */
}


aside h3 {
    flex: 0 0 auto;
    margin-bottom: 12px;
    padding-bottom: 6px;
    border-bottom: 1px solid rgba(255,255,255,0.3);
    text-transform: uppercase;
    letter-spacing: 1px;
}

/* Make nav container auto-fit inside aside */
.nav-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Will space them out evenly */
    flex: 1 1 auto;
    overflow: hidden; /* No scroll */
}

.nav-link {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 8px 12px;
    background-color: rgba(255,255,255,0.20);
    border: 1px solid rgba(255,255,255,0.15);
    border-radius: 12px;
    text-decoration: none;
    color: white;
    transition: all 0.3s ease;
    font-weight: 500;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    font-size: 0.9rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Hover effects */
.nav-link:hover {
    background-color: rgba(255,255,255,0.6);
    transform: translateX(5px);
    color: #fff;
}


.nav-link:hover:before {
    transform: translateX(3px);
}


        .content {
    margin: 120px 20px 120px 320px; /* header, footer, sidebar offset */
    background-color: rgba(255, 255, 255, 0.85);
    color: #222;
    min-height: calc(100vh - 240px); /* Full height minus header + footer space */
    border-radius: 12px;
    box-shadow: 0 12px 24px rgba(0,0,0,0.15);
    padding: 30px;
    box-sizing: border-box;
}


        footer {
    position: fixed;
    bottom: 5px;
    left: 20px;
    right: 35px;
    background-color: rgba(69, 151, 213, 0.35);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    color: white;
    text-align: center;
    padding: 10px 30px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    user-select: none;
    font-size: 0.75rem;
    z-index: 1100;
}

        footer a {
            color: white;
            text-decoration: none;
            font-weight: 600;
            font-size: 0.75rem;
        }
        

/* Container fixed at top-right, for one notification box */
#notification-container {
  position: fixed;
  margin-top: 10px; 
  margin-right: 15px;
  top: 100px;
  right: 20px;
  width: 380px;
  height: 120px;
  z-index: 2000;
  pointer-events: none; /* disable interaction when hidden */
  overflow: visible; /* allow sliding animation to show */
}

/* The notification card itself */
#notification-container .notification-card {
  position: relative;
  width: 100%;
  pointer-events: auto;
  opacity: 0;
  transform: translateX(120%);
  transition: opacity 0.3s ease, transform 0.3s ease;
  will-change: transform, opacity;
  cursor: pointer;
  border-radius: 20px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(20px);
 background: rgba(0, 70, 130, 0.4); /* blue fog */
  border: 1px solid rgba(255, 255, 255, 0.15);
  color: white; /* ensure text is white */
}

/* Show and hide states */
#notification-container .notification-card.show {
  opacity: 1;
  transform: translateX(0);
}

#notification-container .notification-card.hide {
  opacity: 0;
  transform: translateX(120%);
}

/* Content inside the card */
.notification-content {
  position: relative;
  padding: 16px 20px;
  display: flex;
  align-items: center;
  gap: 12px;
  height: 80px;
}

/* Avatar circle */
.notification-avatar {
  width: 40px;
  height: 40px;
  border-radius: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  background: rgba(255, 255, 255, 0.08);
  border: 1px solid rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

/* Avatar text */
.user-avatar {
  font-size: 14px;
  font-weight: 600;
  color: #ffffff;
}

/* Text content */
.notification-body {
  flex: 1;
  min-width: 0;
}

.notification-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 4px;
}

.notification-title {
  font-size: 15px;
  font-weight: 600;
  color: #ffffff;
  line-height: 1.2;
}

.notification-time {
  font-size: 12px;
  color:#ffffff;
  font-weight: 400;
}

.notification-message {
  font-size: 13px;
  color: #ffffff;
  line-height: 1.3;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.notification-meta {
  display: flex;
  align-items: center;
  font-size: 11px;
  color: #ffffff;
  margin-top: 2px;
}

.notification-meta svg {
  width: 10px;
  height: 10px;
  margin-right: 4px;
  fill: currentColor;
}

/* Status indicators and dots if used */
.status-indicators {
  position: absolute;
  bottom: 2rem;
  right: 2rem;
}

.status-text {
  font-size: 11px;
  color: rgba(255, 255, 255, 0.4);
  margin-bottom: 6px;
  text-align: center;
}

.status-dots {
  display: flex;
  gap: 6px;
  justify-content: center;
}

.status-dot-large {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
}

.status-active {
  background: rgba(255, 255, 255, 0.7);
}


    </style>
</head>
<body>
    <form runat="server">
<header>
    <div style="display: flex; align-items: center; gap: 10px;">
        <img src="https://img.icons8.com/color/96/000000/company.png" alt="Company Logo" style="height: 60px;" />
        <a href="Home.aspx">Company Dashboard</a>
    </div>
    <asp:LinkButton ID="btnLogout" runat="server" OnClick="btnLogout_Click" CssClass="logout-button" aria-label="Logout">Logout</asp:LinkButton>
</header>

<aside>
    <h3>Navigation</h3>
    <asp:PlaceHolder ID="DynamicNavPanel" runat="server"></asp:PlaceHolder>
</aside>

<div class="content">
    <asp:ContentPlaceHolder ID="MainContent" runat="server" />
</div>

<footer>
    <a href="https://github.com/Navaneethp360" target="_blank" rel="noopener noreferrer" style="text-decoration: none; color: inherit;">
        &copy; <%= DateTime.Now.Year %> Company Dashboard. All rights reserved.
    </a>
</footer>

        <div id="notification-container" aria-live="polite" aria-atomic="true" style="position: fixed; top: 100px; right: 20px; width: 380px; z-index: 2000; pointer-events: none;">
  <!-- Notifications get injected here -->
</div>

    </form>
</body>
</html>
